{"version":3,"sources":["Components/Task.jsx","Components/Tasks.jsx","Components/AddTask.jsx","Components/Button.jsx","Components/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["Task","task","onDelete","onToggle","className","reminder","onDoubleClick","id","text","style","color","cursor","onClick","day","Tasks","tasks","map","AddTask","onAdd","useState","setText","setDate","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","currentTarget","checked","Button","backgroundColor","Header","title","buttonTogle","showInputs","App","setTasks","useEffect","dataFromStore","localStorage","getItem","JSON","parse","setItem","stringify","setShowInputs","Math","floor","random","newTas","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.289388d1.chunk.js","sourcesContent":["import React from 'react'\r\nimport { FaTimes } from 'react-icons/fa';\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>{task.text} <FaTimes style={{ color: 'red', cursor: 'pointer' }} onClick={() => onDelete(task.id)} /></h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import React from 'react'\r\n\r\nimport Task from './Task';\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    return (\r\n        <>\r\n            {tasks.map(task => (\r\n                <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}></Task>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { React, useState } from 'react';\r\n\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n\r\n    const [text, setText] = useState('');\r\n    const [day, setDate] = useState('');\r\n    const [reminder, setReminder] = useState(true);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!text) {\r\n            alert('Please add text')\r\n            return\r\n        }\r\n\r\n        onAdd({ text, day, reminder })\r\n\r\n        setText('');\r\n        setDate('');\r\n        setReminder(false);\r\n    }\r\n    return (\r\n        <div>\r\n            <form className='add-form' onSubmit={onSubmit}>\r\n                <div className='form-control'>\r\n                    <label>Task</label>\r\n                    <input type='text' placeholder='addTask' value={text} onChange={(e) => setText(e.target.value)}></input>\r\n                </div>\r\n                <div className='form-control'>\r\n                    <label>Time and day</label>\r\n                    <input type='text' placeholder='add time and day' value={day} onChange={(e) => setDate(e.target.value)}></input>\r\n                </div>\r\n                <div className='form-control form-control-check'>\r\n                    <label>Set reminder</label>\r\n                    <input type='checkbox' value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} checked={reminder}></input>\r\n                </div>\r\n\r\n                <input type='submit' className='btn btn-block' value='Save task'></input>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import React from 'react'\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n    return (\r\n        <button style={{ backgroundColor: color }} className='btn' onClick={onClick} >{text}  </button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types';\r\n\r\nimport Button from './Button';\r\n\r\nconst Header = ({ title, buttonTogle, showInputs }) => {\r\n\r\n    return (\r\n        <div>\r\n            <header className='header'>\r\n                <h1>{title}</h1>\r\n                <Button color={showInputs ? 'red' : 'green'} text={showInputs ? 'Close' : 'Add'} onClick={buttonTogle}></Button>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header\r\n","import { useState, useEffect } from 'react';\n\nimport './App.css';\n\nimport Tasks from './Components/Tasks';\nimport AddTask from './Components/AddTask';\nimport Header from './Components/Header';\n\nfunction App() {\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: 'text dfasd',\n      day: 'March 14 ',\n      reminder: true\n    }\n  ])\n\n  useEffect(() => {\n    const dataFromStore = localStorage.getItem(\"tasks\");\n    if (dataFromStore) {\n      setTasks(JSON.parse(dataFromStore))\n    }\n  }, [])\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks))\n  });\n\n  const [showInputs, setShowInputs] = useState(false);\n\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 100000) + 1;\n    const newTas = { id, ...task };\n    setTasks([...tasks, newTas]);\n  }\n  const deleteTask = (id) => {\n    setTasks(tasks.filter(task => task.id !== id))\n  }\n\n  const toggleReminder = (id) => {\n    setTasks(tasks.map(task => task.id === id ? { ...task, reminder: !task.reminder } : task))\n  }\n  return (\n    <div className='container'>\n      <Header showInputs={showInputs} title='title' buttonTogle={() => setShowInputs(!showInputs)}></Header>\n      { showInputs && <AddTask onAdd={addTask}></AddTask>}\n      {tasks.length > 0 ?\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}></Tasks>\n        : \"no tasks\"\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}